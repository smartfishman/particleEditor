export let data={
    "base_frag": "//基础着色器，顶点和片元都直接通过属性注入。\nprecision mediump float;\nuniform vec4 color;\n\nvoid main(){\n    gl_FragColor = color;\n}",
    "base_vert": "//基础着色器，顶点和片元都直接通过属性注入。\nattribute vec3 position;\nuniform mat4 matViewProj;\nuniform mat4 matWorld;\nuniform mat4 matWorld2;\n\nvoid main(){\n    vec4 pos = vec4(position,1);\n    pos =  matViewProj * matWorld * pos;\n    gl_Position = pos;\n}\n",
    "coordinateSystem/coordinateSystem_frag": "//空文件",
    "coordinateSystem/coordinateSystem_vert": "//空文件",
    "particle/particle_frag": "precision mediump float;\nuniform sampler2D u_image;\nuniform sampler2D u_font;\nvarying vec2 v_texcoord;\nvarying float fontEnable;\n\nvoid main(){\n    gl_FragColor = texture2D(u_image,v_texcoord).rgba;\n    if(fontEnable == 1.0){\n        gl_FragColor = texture2D(u_font,v_texcoord).rgba;\n    }\n}",
    "particle/particle_vert": "\n\nattribute vec3 a_position;\nattribute vec2 a_texcoord;\nattribute vec3 a_initialVelocity;\nattribute vec3 a_acceleratedVelocity;\nattribute float a_lifeTime;\nattribute float a_createTime;\n//初始每毫秒逆时针旋转弧度\nattribute float a_initialRotationRate;\n//逆时针旋转弧度的随机波动范围\nattribute float a_rotationRateRange;\nattribute float randSeed;\nattribute vec3 a_worldPos;\n\nuniform mat4 matViewProj;\nuniform mat4 matWorld;\nuniform float u_curTime;\n\nvarying vec2 v_texcoord;\nvarying float fontEnable;\n\n//绕Z轴旋转矩阵\nvoid makeRotationZMat4(inout mat4 outMat,in float rotationRad){\n    vec4 xVec = vec4(cos(rotationRad),sin(rotationRad),0.0,0.0);\n    vec4 yVec = vec4(-sin(rotationRad),cos(rotationRad),0.0,0.0);\n    vec4 zVec = vec4(0.0,0.0,1.0,0.0);\n    vec4 wVec = vec4(0.0,0.0,0.0,1.0);\n    outMat[0] = xVec;\n    outMat[1] = yVec;\n    outMat[2] = zVec;\n    outMat[3] = wVec;\n}\n\n/**平移一个矩阵*/\nvoid translationMat(inout mat4 outMat,in float x,in float y,in float z){\n    outMat[3][0] = x;\n    outMat[3][1] = y;\n    outMat[3][2] = z;\n}\n\n//根据速度和随机种子产生的随机速度计算当前走过的总路程\nfloat getTotalSByRandomV(inout float resultS,in float initV,in float rangeV,in float t,in float lifeTime,in float randSeed){\n    if(rangeV <=0.0){\n        return initV*t;\n    }\n    float random1 = randSeed;\n    float random2 = randSeed;\n    // float random2 = (randSeed % 0.5) * 2;\n    float range = rangeV / 2.0;\n    // float random1 = 1.0;\n    // float random2 = 1.0;\n    float a1 = random1 * lifeTime + 1.0;\n    float a2 = random2 * lifeTime + 1.0;\n    a1 = random2 > 0.5 ? a1 : 1.0 / a1;\n    a2 = random1 > 0.5 ? a2 : 1.0 / a2;\n    // f1 = 25sin(t*a1) f2=25sin(t*a2)\n    //原函数 F1 = -(range/a1)cos(t*a1) F2 = -(range/a2)cos(t*a2)\n    //当前总路程 s1=F1(t)-F1(0) s2=F2(t)-F2(0)\n    float initS = initV * t;\n    float s1 = -(range / a1) * cos(t * a1) - (-(range / a1) * cos(0.0));\n    float s2 = -(range / a2) * cos(t * a2) - (-(range / a2) * cos(0.0));\n    float s = initS + s1 + s2;\n    return s;\n}\n\nvoid main(){\n    fontEnable = 0.0;\n    v_texcoord = a_texcoord;\n\n    float dt = (u_curTime - a_createTime)/1000.0;\n    vec3 offsetPos = (a_initialVelocity+a_initialVelocity+(a_acceleratedVelocity*dt))*0.5*dt;\n    vec3 finalPosition = a_worldPos + offsetPos;\n    vec4 localPos = vec4(a_position,1.0);\n    vec4 worldPos = vec4(finalPosition,1.0);\n    mat4 worldMat = mat4(1.0);\n    translationMat(worldMat,worldPos.x,worldPos.y,worldPos.z);\n    // translationMat(worldMat,50.0,50.0,50.0);\n    mat4 rotationMat = mat4(1.0);\n    if(a_initialRotationRate !=0.0 || a_rotationRateRange>0.0){\n        float rad = 4.0;\n        rad = getTotalSByRandomV(rad,a_initialRotationRate,a_rotationRateRange,dt,a_lifeTime/1000.0,randSeed);\n        makeRotationZMat4(rotationMat,rad);\n    }\n    vec4 pos =  matViewProj * matWorld * worldMat * rotationMat * localPos;\n    gl_Position = pos;\n\n    //调试输出\n    if(a_lifeTime == 9999999.0){\n        pos = vec4(0.5,0.5,0.5,1.0);\n        if(a_texcoord.x ==0.0){\n            pos.x = 0.5;\n        }else{\n            pos.x = 1.0;\n        }\n        if(a_texcoord.y==0.0){\n            pos.y = 1.0;\n        }else{\n            pos.y = 0.5;\n        }\n        fontEnable = 1.0;\n        gl_Position = pos;\n    }\n}\n\n"
}